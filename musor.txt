def gcdlong (a, b, w):
    d=1
    min=1
    
    while a[-1] % 2 == 0 and b[-1] % 2 == 0:
       a=longDivMod(a, [2], w)
       b=longDivMod(b, [2], w)
      
       d=d*2
   
    while a[-1]%2==0:
        a=longDivMod(a, [2], w)
        
    c=1
    
    while longCmp(b, [0])==1 and longCmp(a, b)!=0 :
        '''while b[-1]%2==0:
            b=longDivMod(b, [2], w)
            print(99)'''
        if longCmp(a, b)==1:
            min=b
            k=len(b)
            while longCmp(a, b)==1:
                t= len(a)
                c=longShiftDigitsToHigh(b, t-k)
                if longCmp(a, b)==-1:
                   t-=1
                   c=longShiftDigitsToHigh(b, t-k) 
                a=sub(a, c, w) 
                
            a, b = b, a
            
        elif longCmp(a, b)==-1:
            min=a
            k=len(a)
            while longCmp(a, b)==-1:
                t= len(b)
                c=longShiftDigitsToHigh(a, t-k)
                if longCmp(a, b)==1:
                   t-=1
                   c=longShiftDigitsToHigh(a,t-k)
                   
                a=sub(b, c, w)
        
            
            
    #print(min)
    d=hex(d)[2:] 
    d = hexTo16bit(d)
    d=mul(d, min, w)
    return d